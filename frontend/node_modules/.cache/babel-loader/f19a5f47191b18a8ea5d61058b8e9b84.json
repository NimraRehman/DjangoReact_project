{"ast":null,"code":"var _jsxFileName = \"/home/nimra/ToDoListDjangoReact/frontend/src/components/TaskList.js\";\nimport React, { Component } from \"react\";\nimport { Table } from \"reactstrap\";\nimport NewTaskModal from \"./NewTaskModal\";\nimport ConfirmRemovalModal from \"./ConfirmRemovalModal\";\n\nclass TaskList extends Component {\n  render() {\n    const tasks = this.props.tasks;\n    return React.createElement(Table, {\n      dark: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Task Priority\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Task Status\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Deadline\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, !tasks || tasks.length <= 0 ? React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"6\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Ops, no one here yet\"))) : tasks.map(task => React.createElement(\"tr\", {\n      key: task.pk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, task.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, task.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, task.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, task.task_priority), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, task.task_status), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, task.deadline), React.createElement(\"td\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(NewTaskModal, {\n      create: false,\n      task: task,\n      resetState: this.props.resetState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), \"\\xA0\\xA0\", React.createElement(ConfirmRemovalModal, {\n      pk: task.pk,\n      resetState: this.props.resetState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default TaskList;","map":{"version":3,"sources":["/home/nimra/ToDoListDjangoReact/frontend/src/components/TaskList.js"],"names":["React","Component","Table","NewTaskModal","ConfirmRemovalModal","TaskList","render","tasks","props","length","map","task","pk","name","description","category","task_priority","task_status","deadline","resetState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AACA,WACE,oBAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACA,KAAD,IAAUA,KAAK,CAACE,MAAN,IAAgB,CAA1B,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,CADD,GAODF,KAAK,CAACG,GAAN,CAAUC,IAAI,IACV;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,WAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACI,QAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACK,aAAV,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAI,CAACM,WAAV,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,IAAI,CAACO,QAAV,CANF,EAOE;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,MAAM,EAAE,KADV;AAEE,MAAA,IAAI,EAAEP,IAFR;AAGE,MAAA,UAAU,EAAE,KAAKH,KAAL,CAAWW,UAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,cAOE,oBAAC,mBAAD;AACE,MAAA,EAAE,EAAER,IAAI,CAACC,EADX;AAEE,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWW,UAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAPF,CADJ,CARF,CAZF,CADF;AA+CD;;AAlD8B;;AAqDjC,eAAed,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Table } from \"reactstrap\";\nimport NewTaskModal from \"./NewTaskModal\";\n\nimport ConfirmRemovalModal from \"./ConfirmRemovalModal\";\n\nclass TaskList extends Component {\n  render() {\n    const tasks = this.props.tasks;\n    return (\n      <Table dark>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Category</th>\n            <th>Task Priority</th>\n            <th>Task Status</th>\n            <th>Deadline</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {!tasks || tasks.length <= 0 ? (\n            <tr>\n              <td colSpan=\"6\" align=\"center\">\n                <b>Ops, no one here yet</b>\n              </td>\n            </tr>\n          ) : (\n          tasks.map(task => (\n              <tr key={task.pk}>\n                <td>{task.name}</td>\n                <td>{task.description}</td>\n                <td>{task.category}</td>\n                <td>{task.task_priority}</td>\n                <td>{task.task_status}</td>\n                <td>{task.deadline}</td>\n                <td align=\"center\">\n                  <NewTaskModal\n                    create={false}\n                    task={task}\n                    resetState={this.props.resetState}\n                  />\n                  &nbsp;&nbsp;\n                  <ConfirmRemovalModal\n                    pk={task.pk}\n                    resetState={this.props.resetState}\n                  />\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}