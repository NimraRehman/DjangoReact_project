{"ast":null,"code":"var _jsxFileName = \"/home/nimra/ToDoListDjangoReact/frontend/src/components/NewTaskForm.js\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants\";\n\nclass NewTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pk: 0,\n      name: \"\",\n      description: \"\",\n      category: \"\",\n      task_priority: \"\",\n      task_status: \"\",\n      deadline: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.createTask = e => {\n      e.preventDefault();\n      axios.post(API_URL, this.state).then(() => {\n        this.props.resetState();\n        this.props.toggle();\n      });\n    };\n\n    this.editTask = e => {\n      e.preventDefault();\n      axios.put(API_URL + this.state.pk, this.state).then(() => {\n        this.props.resetState();\n        this.props.toggle();\n      });\n    };\n\n    this.defaultIfEmpty = value => {\n      return value === \"\" ? \"\" : value;\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.task) {\n      const {\n        pk,\n        name,\n        description,\n        category,\n        task_priority,\n        task_status,\n        deadline\n      } = this.props.task;\n      this.setState({\n        pk,\n        name,\n        description,\n        category,\n        task_priority,\n        task_status,\n        deadline\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.props.task ? this.editTask : this.createTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.description),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Category:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"category\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.category),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"task_priority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Task Priority:\"), React.createElement(Input, {\n      type: \"number\",\n      name: \"task_priority\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.task_priority),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"task_status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Task Status:\"), React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"task_status\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.task_status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), \"FormGroup>\", React.createElement(Label, {\n      for: \"deadline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Deadline:\"), React.createElement(Input, {\n      type: \"date\",\n      name: \"deadline\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.deadline),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Send\"));\n  }\n\n}\n\nexport default NewTaskForm;","map":{"version":3,"sources":["/home/nimra/ToDoListDjangoReact/frontend/src/components/NewTaskForm.js"],"names":["React","Button","Form","FormGroup","Input","Label","axios","API_URL","NewTaskForm","Component","state","pk","name","description","category","task_priority","task_status","deadline","onChange","e","setState","target","value","createTask","preventDefault","post","then","props","resetState","toggle","editTask","put","defaultIfEmpty","componentDidMount","task","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nimport axios from \"axios\";\n\nimport { API_URL } from \"../constants\";\n\nclass NewTaskForm extends React.Component {\n  state = {\n    pk: 0,\n    name: \"\",\n    description: \"\",\n    category: \"\",\n    task_priority: \"\",\n    task_status: \"\",\n    deadline: \"\"\n  };\n\n  componentDidMount() {\n    if (this.props.task) {\n      const { pk, name, description, category, task_priority, task_status, deadline } = this.props.task;\n      this.setState({ pk, name, description, category, task_priority, task_status, deadline });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  createTask = e => {\n    e.preventDefault();\n    axios.post(API_URL, this.state).then(() => {\n      this.props.resetState();\n      this.props.toggle();\n    });\n  };\n\n  editTask = e => {\n    e.preventDefault();\n    axios.put(API_URL + this.state.pk, this.state).then(() => {\n      this.props.resetState();\n      this.props.toggle();\n    });\n  };\n\n  defaultIfEmpty = value => {\n    return value === \"\" ? \"\" : value;\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.props.task ? this.editTask : this.createTask}>\n        <FormGroup>\n          <Label for=\"name\">Name:</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.name)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"description\">Description:</Label>\n          <Input\n            type=\"text\"\n            name=\"description\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.description)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"category\">Category:</Label>\n          <Input\n            type=\"text\"\n            name=\"category\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.category)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"task_priority\">Task Priority:</Label>\n          <Input\n            type= \"number\"\n            name=\"task_priority\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.task_priority)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"task_status\">Task Status:</Label>\n          <Input\n            type=\"checkbox\"\n            name=\"task_status\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.task_status)}\n          />\n        </FormGroup>FormGroup>\n          <Label for=\"deadline\">Deadline:</Label>\n          <Input\n            type=\"date\"\n            name=\"deadline\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.deadline)}\n          />\n        <Button>Send</Button>\n      </Form>\n    );\n  }\n}\n\nexport default NewTaskForm;"]},"metadata":{},"sourceType":"module"}